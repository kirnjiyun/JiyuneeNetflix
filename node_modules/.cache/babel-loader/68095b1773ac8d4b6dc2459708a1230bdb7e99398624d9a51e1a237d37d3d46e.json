{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/JiyuneeNetflix/src/pages/Moviespage/Moviespage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSearchMovieQuery } from \"../../hooks/useSearchMovie\";\nimport { useSearchParams } from \"react-router-dom\";\nimport MovieCard from \"../../common/MovieCard/MovieCard\";\nimport * as S from \"./moviespage.styled\";\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from \"react-router-dom\";\nimport FilterandSort from \"./components/FilterandSort\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Moviespage = () => {\n  _s();\n  var _data$results;\n  const [query] = useSearchParams();\n  const keyword = query.get(\"q\");\n  const navigate = useNavigate();\n  const [page, setPage] = useState(1);\n  const ClickPage = ({\n    selected\n  }) => {\n    setPage(selected + 1);\n  };\n  const ClickCard = data => {\n    navigate(`/movies/${movie.id}`);\n  };\n  const {\n    data,\n    isLoading,\n    isError,\n    error\n  } = useSearchMovieQuery({\n    keyword,\n    page\n  });\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading... (loadingspinner \\uCD94\\uAC00\\uD574\\uC57C\\uB428)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(S.MoviespageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(S.FilterContainer, {\n        children: /*#__PURE__*/_jsxDEV(FilterandSort, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(S.MoviesContainer, {\n        children: data === null || data === void 0 ? void 0 : (_data$results = data.results) === null || _data$results === void 0 ? void 0 : _data$results.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          onClick: ClickCard,\n          movie: movie\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(S.PagenationWrap, {\n      children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        breakLabel: \"...\",\n        nextLabel: \"next >\",\n        onPageChange: ClickPage,\n        pageRangeDisplayed: 5,\n        pageCount: data === null || data === void 0 ? void 0 : data.total_pages,\n        previousLabel: \"< previous\",\n        previousClassName: \"page-item\",\n        nextClassName: \"page-item\",\n        breakClassName: \"break\",\n        containerClassName: \"pagination\",\n        pageClassName: \"page-item\",\n        activeClassName: \"active\",\n        disabledClassName: \"disabled\",\n        forcePage: page - 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Moviespage, \"SgP+ixpfwVkDm2I/Ee0WkamRpP0=\", false, function () {\n  return [useSearchParams, useNavigate, useSearchMovieQuery];\n});\n_c = Moviespage;\nexport default Moviespage;\nvar _c;\n$RefreshReg$(_c, \"Moviespage\");","map":{"version":3,"names":["React","useState","useSearchMovieQuery","useSearchParams","MovieCard","S","ReactPaginate","useNavigate","FilterandSort","jsxDEV","_jsxDEV","Moviespage","_s","_data$results","query","keyword","get","navigate","page","setPage","ClickPage","selected","ClickCard","data","movie","id","isLoading","isError","error","children","fileName","_jsxFileName","lineNumber","columnNumber","message","Container","MoviespageContainer","FilterContainer","MoviesContainer","results","map","onClick","PagenationWrap","breakLabel","nextLabel","onPageChange","pageRangeDisplayed","pageCount","total_pages","previousLabel","previousClassName","nextClassName","breakClassName","containerClassName","pageClassName","activeClassName","disabledClassName","forcePage","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/JiyuneeNetflix/src/pages/Moviespage/Moviespage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useSearchMovieQuery } from \"../../hooks/useSearchMovie\";\nimport { useSearchParams } from \"react-router-dom\";\nimport MovieCard from \"../../common/MovieCard/MovieCard\";\nimport * as S from \"./moviespage.styled\";\nimport ReactPaginate from \"react-paginate\";\nimport { useNavigate } from \"react-router-dom\";\nimport FilterandSort from \"./components/FilterandSort\";\nconst Moviespage = () => {\n    const [query] = useSearchParams();\n    const keyword = query.get(\"q\");\n    const navigate = useNavigate();\n    const [page, setPage] = useState(1);\n    const ClickPage = ({ selected }) => {\n        setPage(selected + 1);\n    };\n    const ClickCard = (data) => {\n        navigate(`/movies/${movie.id}`);\n    };\n    const { data, isLoading, isError, error } = useSearchMovieQuery({\n        keyword,\n        page,\n    });\n\n    if (isLoading) {\n        return <div>Loading... (loadingspinner 추가해야됨)</div>;\n    }\n\n    if (isError) {\n        return <div>{error.message}</div>;\n    }\n    return (\n        <S.Container>\n            <S.MoviespageContainer>\n                <S.FilterContainer>\n                    <FilterandSort />\n                </S.FilterContainer>\n                <S.MoviesContainer>\n                    {data?.results?.map((movie) => (\n                        <MovieCard\n                            onClick={ClickCard}\n                            key={movie.id}\n                            movie={movie}\n                        />\n                    ))}\n                </S.MoviesContainer>\n            </S.MoviespageContainer>\n            <S.PagenationWrap>\n                <ReactPaginate\n                    breakLabel={\"...\"}\n                    nextLabel={\"next >\"}\n                    onPageChange={ClickPage}\n                    pageRangeDisplayed={5}\n                    pageCount={data?.total_pages}\n                    previousLabel={\"< previous\"}\n                    previousClassName=\"page-item\"\n                    nextClassName=\"page-item\"\n                    breakClassName=\"break\"\n                    containerClassName=\"pagination\"\n                    pageClassName=\"page-item\"\n                    activeClassName=\"active\"\n                    disabledClassName=\"disabled\"\n                    forcePage={page - 1}\n                />\n            </S.PagenationWrap>\n        </S.Container>\n    );\n};\n\nexport default Moviespage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}