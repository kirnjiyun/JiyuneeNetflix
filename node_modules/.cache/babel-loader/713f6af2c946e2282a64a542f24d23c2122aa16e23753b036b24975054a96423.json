{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/JiyuneeNetflix/src/common/MovieCard/MovieCard.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport * as S from \"./movieCard.styled\";\nimport { useMovieGenreQuery } from \"../../hooks/useMovieGenre\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCard = ({\n  movie\n}) => {\n  _s();\n  const {\n    data: genreData\n  } = useMovieGenreQuery();\n  const showGenre = genreIDList => {};\n  return /*#__PURE__*/_jsxDEV(S.MovieCardContainer, {\n    style: {\n      backgroundImage: \"url(\" + `https://www.themoviedb.org/t/p/w300_and_h450_bestv2${movie.poster_path}` + \")\"\n    },\n    children: /*#__PURE__*/_jsxDEV(S.MovieCard, {\n      children: [/*#__PURE__*/_jsxDEV(S.Title, {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(S.Genre, {\n        children: showGenre(movie.genre_ids).slice(0, 2).join(\" \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(S.Vote, {\n          children: [\"\\u2605 \", movie.vote_average.toFixed(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), movie.adult ? /*#__PURE__*/_jsxDEV(S.Adult, {\n          children: \"18+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 36\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieCard, \"j1AQJOWtpIETEiuh6kdsVMBmQIM=\", false, function () {\n  return [useMovieGenreQuery];\n});\n_c = MovieCard;\nexport default MovieCard;\nvar _c;\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"names":["React","S","useMovieGenreQuery","jsxDEV","_jsxDEV","MovieCard","movie","_s","data","genreData","showGenre","genreIDList","MovieCardContainer","style","backgroundImage","poster_path","children","Title","title","fileName","_jsxFileName","lineNumber","columnNumber","Genre","genre_ids","slice","join","Vote","vote_average","toFixed","adult","Adult","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/JiyuneeNetflix/src/common/MovieCard/MovieCard.jsx"],"sourcesContent":["import React from \"react\";\nimport * as S from \"./movieCard.styled\";\nimport { useMovieGenreQuery } from \"../../hooks/useMovieGenre\";\n\nconst MovieCard = ({ movie }) => {\n    const { data: genreData } = useMovieGenreQuery();\n    const showGenre = (genreIDList) => {};\n    return (\n        <S.MovieCardContainer\n            style={{\n                backgroundImage:\n                    \"url(\" +\n                    `https://www.themoviedb.org/t/p/w300_and_h450_bestv2${movie.poster_path}` +\n                    \")\",\n            }}\n        >\n            <S.MovieCard>\n                <S.Title>{movie.title}</S.Title>\n                <S.Genre>\n                    {showGenre(movie.genre_ids).slice(0, 2).join(\" \")}\n                </S.Genre>\n                <div>\n                    <S.Vote>â˜… {movie.vote_average.toFixed(1)}</S.Vote>\n                    {movie.adult ? <S.Adult>18+</S.Adult> : null}\n                </div>\n            </S.MovieCard>\n        </S.MovieCardContainer>\n    );\n};\n\nexport default MovieCard;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,CAAC,MAAM,oBAAoB;AACvC,SAASC,kBAAkB,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM;IAAEC,IAAI,EAAEC;EAAU,CAAC,GAAGP,kBAAkB,CAAC,CAAC;EAChD,MAAMQ,SAAS,GAAIC,WAAW,IAAK,CAAC,CAAC;EACrC,oBACIP,OAAA,CAACH,CAAC,CAACW,kBAAkB;IACjBC,KAAK,EAAE;MACHC,eAAe,EACX,MAAM,GACL,sDAAqDR,KAAK,CAACS,WAAY,EAAC,GACzE;IACR,CAAE;IAAAC,QAAA,eAEFZ,OAAA,CAACH,CAAC,CAACI,SAAS;MAAAW,QAAA,gBACRZ,OAAA,CAACH,CAAC,CAACgB,KAAK;QAAAD,QAAA,EAAEV,KAAK,CAACY;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,eAChClB,OAAA,CAACH,CAAC,CAACsB,KAAK;QAAAP,QAAA,EACHN,SAAS,CAACJ,KAAK,CAACkB,SAAS,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG;MAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACVlB,OAAA;QAAAY,QAAA,gBACIZ,OAAA,CAACH,CAAC,CAAC0B,IAAI;UAAAX,QAAA,GAAC,SAAE,EAACV,KAAK,CAACsB,YAAY,CAACC,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,EACjDhB,KAAK,CAACwB,KAAK,gBAAG1B,OAAA,CAACH,CAAC,CAAC8B,KAAK;UAAAf,QAAA,EAAC;QAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,GAAG,IAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAE/B,CAAC;AAACf,EAAA,CAxBIF,SAAS;EAAA,QACiBH,kBAAkB;AAAA;AAAA8B,EAAA,GAD5C3B,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}